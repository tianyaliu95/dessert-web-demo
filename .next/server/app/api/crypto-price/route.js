(()=>{var e={};e.id=29,e.ids=[29],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},6516:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>m,routeModule:()=>c,serverHooks:()=>d,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>l});var o={};t.r(o),t.d(o,{GET:()=>a});var s=t(6559),n=t(8088),i=t(7719),p=t(2190);async function a(e){let{searchParams:r}=new URL(e.url),t=r.get("symbol");if(!t)return p.NextResponse.json({error:"Symbol is required"},{status:400});try{console.log(`Trying Binance API for ${t}...`);let e=await fetch(`https://api1.binance.com/api/v3/ticker/price?symbol=${t}`,{headers:{Accept:"application/json"}});if(e.ok){let r=await e.json();if(r.price)return console.log(`Successfully got price from Binance: ${r.price}`),p.NextResponse.json({price:r.price})}}catch(e){console.log("Binance API failed, trying CryptoCompare...")}try{let e={BTCUSDT:"BTC",ETHUSDT:"ETH"}[t];if(!e)return p.NextResponse.json({error:"Unsupported symbol"},{status:400});console.log(`Fetching price from CryptoCompare for ${e}...`);let r=await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${e}&tsyms=USD`,{headers:{Accept:"application/json"}});if(!r.ok){let e=await r.text();return console.error(`CryptoCompare API error: ${r.status}`,e),p.NextResponse.json({error:`CryptoCompare API error: ${r.status} - ${e}`},{status:r.status})}let o=await r.json();if(console.log("Received data from CryptoCompare:",o),!o.USD)return console.error("No price in response:",o),p.NextResponse.json({error:"Invalid response from CryptoCompare API"},{status:500});let s=o.USD.toString();return console.log(`Price for ${e}: ${s}`),p.NextResponse.json({price:s})}catch(e){return console.error("Error fetching crypto price:",e),p.NextResponse.json({error:e instanceof Error?e.message:"Failed to fetch price"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/crypto-price/route",pathname:"/api/crypto-price",filename:"route",bundlePath:"app/api/crypto-price/route"},resolvedPagePath:"/Users/jtliu/coding/dessert-web-demo/app/api/crypto-price/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:u,workUnitAsyncStorage:l,serverHooks:d}=c;function m(){return(0,i.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:l})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[447,580],()=>t(6516));module.exports=o})();